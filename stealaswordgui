-- Splash Screen
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")

local splashGui = Instance.new("ScreenGui")
splashGui.Name = "SplashScreen"
splashGui.ResetOnSpawn = false
splashGui.Parent = CoreGui

local splashFrame = Instance.new("Frame")
splashFrame.Size = UDim2.new(1, 0, 1, 0)
splashFrame.BackgroundTransparency = 0
splashFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 30)
splashFrame.Parent = splashGui

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(25, 10, 60)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(10, 10, 35))
}
gradient.Rotation = 0
gradient.Parent = splashFrame

TweenService:Create(
    gradient,
    TweenInfo.new(4, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1),
    {Rotation = 360}
):Play()

local blur = Instance.new("BlurEffect")
blur.Size = 18
blur.Parent = Lighting

local splashText = Instance.new("TextLabel")
splashText.Size = UDim2.new(1, 0, 1, 0)
splashText.BackgroundTransparency = 1
splashText.Text = "MADE BY DARKDEX"
splashText.TextColor3 = Color3.new(1, 1, 1)
splashText.Font = Enum.Font.GothamBold
splashText.TextScaled = true
splashText.TextStrokeColor3 = Color3.new(0, 0, 0)
splashText.TextStrokeTransparency = 0.25
splashText.Parent = splashFrame

local txtGradient = Instance.new("UIGradient", splashText)
txtGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255,0,0)),
    ColorSequenceKeypoint.new(0.25, Color3.fromRGB(255,255,0)),
    ColorSequenceKeypoint.new(0.50, Color3.fromRGB(0,255,0)),
    ColorSequenceKeypoint.new(0.75, Color3.fromRGB(0,255,255)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0,0,255)),
}
TweenService:Create(
    txtGradient,
    TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1),
    {Rotation = 360}
):Play()

wait(2)
splashGui:Destroy()
blur:Destroy()

-- Load Rayfield
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)
if not success then
    warn("Failed to load Rayfield")
    return
end

-- Main GUI Window
local Window = Rayfield:CreateWindow({
    Name = "Darkhub",
    Theme = "Default",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "DarkDexHub",
        FileName = "Settings"
    }
})

local tab = Window:CreateTab("Main Menu", 4483362458)
tab:CreateSection("Spawn")

local weapons = {
    "Mystic Reaper",
    "Bloodvine Axe",
    "Ice Blade",
    "Thunder Hammer",
    "Shadow Scythe",
    "Inferno Blade"
}

for _, weapon in ipairs(weapons) do
    tab:CreateButton({
        Name = weapon,
        Callback = function()
            game:GetService("ReplicatedStorage")
                :WaitForChild("Events")
                :WaitForChild("AddWeaponToBase")
                :FireServer(weapon)
        end
    })
end

tab:CreateButton({
    Name = "Heavens Halberd",
    Callback = function()
        game:GetService("ReplicatedStorage")
            :WaitForChild("Events")
            :WaitForChild("AddWeaponToBase")
            :FireServer("Heavens Halberd")
    end
})

Rayfield:LoadConfiguration()
